#include<bits/stdc++.h>

using namespace std;

int getMedian(int arr[], int n){
    if (n%2 != 0){
        return arr[n/2];
    }
    else{
        return (arr[n/2 -1]+arr[n/2])/2;
    }
}

int findMedian(int Arr1[], int Arr2[], int n){
    
    if (n <= 0)
        return -1;
    
    if(n==1){
        return (Arr1[0] + Arr2[0])/2;
    }
    
    if(n==2){
        return (max(Arr1[0],Arr2[0]) + min(Arr1[1],Arr2[1]))/2;
    }
    
    int m1, m2;
    m1=getMedian(Arr1, n);
    m2=getMedian(Arr2, n);
    
    if(m1==m2){
        return m2;
    }
    
    
	if (m1 < m2)
	{
		if (n % 2 == 0)
			return findMedian(Arr1 + n / 2 - 1, 
							Arr2, n - n / 2 + 1);
		return findMedian(Arr1 + n / 2, 
						Arr2, n - n / 2);
	}


	if (n % 2 == 0)
		return findMedian(Arr2 + n / 2 - 1, 
						Arr1, n - n / 2 + 1);
	return findMedian(Arr2 + n / 2, 
					Arr1, n - n / 2);
}

int main(){
    int n;
    cin>>n;
    int A1[n], A2[n];
    for(int i=0;i<n;i++){
        cin>>A1[i];
    }
    for(int j=0;j<n;j++){
        cin>>A2[j];
    }
    
    int median = findMedian(A1, A2, n);
    cout<<median;
}
